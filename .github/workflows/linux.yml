name: Linux

on:
  workflow_call:

env:
  REPO_NAME: ${{ github.event.repository.name }}

jobs:
  setup:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.REPO_NAME }}
    steps:
      - name: Checkout ${{ env.REPO_NAME }}
        uses: actions/checkout@v4
        with:
          path: ${{ env.REPO_NAME }}
      - name: Setup Dependencies
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: libgtk-3-dev libwebkit2gtk-4.0-dev
          version: 1.0
      - name: Checkout V
        uses: actions/checkout@v4
        with:
          repository: 'vlang/v'
          path: vlang
      - name: Setup V
        run: cd ../vlang && make -j4 && ./v symlink && v version
      - name: Setup modules
        run: |
          v install
          ~/.vmodules/webview/build.vsh
      - name: Cache
        uses: actions/cache/save@v3
        with:
          path: |
            vlang
            ~/.vmodules
          key: ${{ runner.os }}-${{ github.sha }}

  lint:
    needs: setup
    uses: ./.github/workflows/lint.yml

  build:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cc: [tcc, gcc, clang]
        flag: ['', -cstrict]
        exclude:
          - cc: clang
            flag: -cstrict
      fail-fast: false
    env:
      # VFLAGS: -cg -cc ${{ matrix.cc }} ${{ matrix.flag }}
      VFLAGS: -cg -cc ${{ matrix.cc }} # currently -cstrict won't work with miniaudio
    defaults:
      run:
        working-directory: ${{ env.REPO_NAME }}
    steps:
      - name: Checkout ${{ env.REPO_NAME }}
        uses: actions/checkout@v4
        with:
          path: ${{ env.REPO_NAME }}
      - name: Restore cache
        uses: actions/cache/restore@v3
        with:
          path: |
            vlang
            ~/.vmodules
          key: ${{ runner.os }}-${{ github.sha }}
          fail-on-cache-miss: true
      - name: Setup V
        run: ../vlang/v symlink && v version
      - name: Setup dependencies
        if: runner.os == 'Linux'
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: libgtk-3-dev libwebkit2gtk-4.0-dev
          version: 1.0
      - name: Build
        run: v .

  deploy:
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.REPO_NAME }}
    permissions:
      contents: write
    env:
      ARTIFACT: emoji-mart-linux-amd64
      APPIMAGE_ARTIFACT: emoji-mart-ubuntu-amd64.AppImage
    steps:
      - name: Checkout ${{ env.REPO_NAME }}
        uses: actions/checkout@v4
        with:
          path: ${{ env.REPO_NAME }}
      - name: Restore cache
        uses: actions/cache/restore@v3
        with:
          path: |
            vlang
            ~/.vmodules
          key: ${{ runner.os }}-${{ github.sha }}
          fail-on-cache-miss: true
      - name: Setup V
        run: ../vlang/v symlink && v version
      - name: Setup dependencies
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: libgtk-3-dev libwebkit2gtk-4.0-dev libfuse2
          version: 1.0
      - name: Prepare deployment build
        run: |
          curl -sSLo /usr/local/bin/appimage-builder https://github.com/AppImageCrafters/appimage-builder/releases/latest/download/appimage-builder-1.1.0-x86_64.AppImage
          curl -sSLo ./lvb https://github.com/ttytm/LVbag/releases/latest/download/lvb-linux-amd64
          sudo chmod +x /usr/local/bin/appimage-builder
          sudo chmod +x ./lvb
          ./lvb --version
          appimage-builder --version
          git fetch --prune --unshallow
      - name: Build
        run: |
          ./build.vsh
          ./build.vsh --appimage --skip-ui --skip-bin
      - name: Prepare artifacts
        run: |
          mv "dist/emoji-mart" ./$ARTIFACT
          mv "dist/appimage/Emoji Mart-latest-x86_64.AppImage" ./$APPIMAGE_ARTIFACT
      - name: Upload binary artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT }}
          path: ${{ env.REPO_NAME }}/${{ env.ARTIFACT }}
      - name: Upload appimage artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.APPIMAGE_ARTIFACT }}
          path: ${{ env.REPO_NAME }}/${{ env.APPIMAGE_ARTIFACT }}
      - name: Release
        if: github.ref_type == 'tag'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ env.REPO_NAME }}/assets/emoji-mart.desktop
            ${{ env.REPO_NAME }}/${{ env.ARTIFACT }}
            ${{ env.REPO_NAME }}/${{ env.APPIMAGE_ARTIFACT }}
