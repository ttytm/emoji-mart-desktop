name: Linux

on:
  workflow_call:

env:
  REPO_NAME: ${{ github.event.repository.name }}

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Dependencies
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: libgtk-3-dev libwebkit2gtk-4.0-dev
          version: 1.0
      - name: Setup V
        uses: vlang/setup-v@v1.3
        with:
          check-latest: true
      - name: Setup webview
        run: |
          v install --git https://github.com/ttytm/webview
          ~/.vmodules/webview/src/build.vsh
      - name: Cache
        uses: actions/cache/save@v3
        with:
          path: |
            vlang
            ~/.vmodules
          key: ${{ runner.os }}-${{ github.sha }}

  lint:
    needs: setup
    uses: ./.github/workflows/lint.yml

  build-linux:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: [tcc, gcc, clang]
        optimization: ['', -cstrict]
        exclude:
          - compiler: clang
            optimization: -cstrict
      fail-fast: false
    steps:
      - name: Restore Cache
        uses: actions/cache/restore@v3
        with:
          path: |
            vlang
            ~/.vmodules
          key: ${{ runner.os }}-${{ github.sha }}
          fail-on-cache-miss: true
      - name: Setup V
        uses: vlang/setup-v@v1.3
      - name: Setup Dependencies
        if: runner.os == 'Linux'
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: libgtk-3-dev libwebkit2gtk-4.0-dev
          version: 1.0
      - name: Checkout ${{ env.REPO_NAME }}
        uses: actions/checkout@v3
      - name: Build
        # run: v -cg -cc ${{ matrix.compiler }} ${{ matrix.optimization }} .
        run: v -cg -cc ${{ matrix.compiler }} .

  build-gcc-sanitized:
    needs: build-linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        sanitizer:
          - -cflags -fsanitize=leak
          - -cflags -fsanitize=address -cflags -fsanitize-address-use-after-scope -cflags -fsanitize=pointer-compare -cflags -fsanitize=pointer-subtract
          - -cflags -fsanitize=undefined -cflags -fsanitize=shift -cflags -fsanitize=shift-exponent -cflags -fsanitize=shift-base -cflags -fsanitize=integer-divide-by-zero -cflags -fsanitize=unreachable -cflags -fsanitize=vla-bound -cflags -fsanitize=null -cflags -fsanitize=return -cflags -fsanitize=signed-integer-overflow -cflags -fsanitize=bounds -cflags -fsanitize=bounds-strict -cflags -fsanitize=alignment -cflags -fsanitize=object-size -cflags -fsanitize=float-divide-by-zero -cflags -fsanitize=float-cast-overflow -cflags -fsanitize=nonnull-attribute -cflags -fsanitize=returns-nonnull-attribute -cflags -fsanitize=bool -cflags -fsanitize=enum -cflags -fsanitize=vptr -cflags -fsanitize=pointer-overflow -cflags -fsanitize=builtin
    steps:
      - name: Restore Cache
        uses: actions/cache/restore@v3
        with:
          path: |
            vlang
            ~/.vmodules
          key: ${{ runner.os }}-${{ github.sha }}
          fail-on-cache-miss: true
      - name: Setup V
        uses: vlang/setup-v@v1.3
      - name: Setup dependencies
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: libgtk-3-dev libwebkit2gtk-4.0-dev
          version: 1.0
      - name: Checkout ${{ env.REPO_NAME }}
        uses: actions/checkout@v3
      - name: Build
        run: v -cc gcc ${{ matrix.sanitizer }} .

  build-clang-sanitized:
    needs: build-linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        sanitizer: [address, memory, leak]
    steps:
      - name: Restore Cache
        uses: actions/cache/restore@v3
        with:
          path: |
            vlang
            ~/.vmodules
          key: ${{ runner.os }}-${{ github.sha }}
          fail-on-cache-miss: true
      - name: Setup V
        uses: vlang/setup-v@v1.3
      - name: Setup Dependencies
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: libgtk-3-dev libwebkit2gtk-4.0-dev
          version: 1.0
      - name: Checkout ${{ env.REPO_NAME }}
        uses: actions/checkout@v3
      - name: Build
        run: v -cc clang -cflags -fsanitize=${{ matrix.sanitizer }} .

  deploy:
    needs: build-linux
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Restore Cache
        uses: actions/cache/restore@v3
        with:
          path: |
            vlang
            ~/.vmodules
          key: ${{ runner.os }}-${{ github.sha }}
          fail-on-cache-miss: true
      - name: Setup V
        uses: vlang/setup-v@v1.3
      - name: Setup apt Packages
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: libgtk-3-dev libwebkit2gtk-4.0-dev libfuse2
          version: 1.0
      - name: Setup appimage-builder
        run: |
          curl -sSLo /usr/local/bin/appimage-builder https://github.com/AppImageCrafters/appimage-builder/releases/latest/download/appimage-builder-1.1.0-x86_64.AppImage
          sudo chmod +x /usr/local/bin/appimage-builder
      - name: Checkout ${{ env.REPO_NAME }}
        uses: actions/checkout@v3
      - name: Build AppImage
        run: |
          ./build.vsh --appimage
      - name: Prepare Artifact
        run: |
          artifact=emoji-mart-desktop-x86_64.AppImage
          echo "ARTIFACT=$artifact" >> $GITHUB_ENV
          mv "dist/appimage/Emoji Mart-latest-x86_64.AppImage" ./$artifact
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT }}
          path: ${{ env.ARTIFACT }}
      - name: Release Artifacts
        if: github.ref_type == 'tag'
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.ARTIFACT }}
